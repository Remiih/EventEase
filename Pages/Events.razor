@page "/events"
@using EventEase.Models
@using EventEase.Shared

<h1>Event List</h1>

<button @onclick="RefreshEvents" class="btn btn-primary">Refresh</button>

<div class="row">
    @foreach (var eventItem in Eventss)
    {
        <div class="col-md-6">
            <EventCard Event="eventItem" />
        </div>
    }
</div>

@code {
    private List<Event> Eventss = new List<Event>();

    [Inject]
    private IJSRuntime JSRuntime { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadEvents();
    }

    protected async Task RefreshEvents()
    {
        await LoadEvents();
    }

    private async Task LoadEvents()
    {
        try
        {
            var eventsJson = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "events");
            if (!string.IsNullOrEmpty(eventsJson))
            {
                Eventss = System.Text.Json.JsonSerializer.Deserialize<List<Event>>(eventsJson);
            }
            else
            {
                Eventss = new List<Event>();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading events: {ex.Message}");
            // Optionally display an error message to the user
            Eventss = new List<Event>(); // Ensure Eventss is initialized even on error
        }
    }
}
